const list =
  "";
class BadWords {
  constructor(censor) {
    this.filter = (content) => {
      let _content = content.toLowerCase().trim();
      const _badWordsList = [
        ...new Set(atob(list).toLocaleLowerCase().split(",")),
      ];
      const response = {
        content: content,
        "bad-words-total": 0,
        "bad-words-list": [],
        "content-filtered": content,
        "censor-character": censor ? censor.placeholder : "*",
      };
      _content.split(" ").forEach((word) => {
        if (_badWordsList.includes(word)) {
          response["bad-words-list"].push(word);
          response["bad-words-total"]++;
          _content = _content
            .toLowerCase()
            .replaceAll(word, response["censor-character"].repeat(word.length));
        }
      });
      response["content-filtered"] = _content;
      for (const [key, val] of Object.entries(response)) {
        Object.defineProperty(response, key, {
          value: val,
          enumerable: false,
          writable: false,
          configurable: false,
        });
      }
      return response;
    };
  }
}

if (typeof window === "undefined") {
  exports.BadWords = BadWords; // { BadWords: class BadWords }
  
}
